# docker-compose.yml
# https://gis-ops.com/de/postgrest-tutorial-installation-and-setup/
 
services:

  postgrest:
    restart: always
    image: "postgrest/postgrest:v12.0.2"
    ports:
      - "3000:3000"
    links:
      - postgres:postgres
    environment:
      PGRST_DB_URI: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/postgis"
      PGRST_DB_SCHEMA: api
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_OPENAPI_SERVER_PROXY_URI: ${PGRST_OPENAPI_SERVER_PROXY_URI}
      PGRST_DB_PRE_CONFIG: "postgrest.pre_config"
      PGRST_OPENAPI_SECURITY_ACTIVE: "true"
      #PGRST_JWT_SECRET: "7u8f0HLDi5S6NKzNuo69cDEl3abvDP8YVfW3egLNubvy7uJFrP"
      #PGRST_JWT_SECRET_IS_BASE64: "false"
    
    depends_on:
      - postgres


  postgres:
    restart: always
    #name the container
    container_name: postgis
    image: "kartoza/postgis"
    ports:
        - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DBNAME=postgis
  
    volumes:

      # pgjwt & pgcrypto Extension
      - ./config/pgjwt/pgjwt.control:/usr/share/postgresql/13/extension/pgjwt.control
      - ./config/pgjwt/pgjwt--0.2.0-tfm.sql:/usr/share/postgresql/13/extension/pgjwt--0.2.0.sql
      - ./config/10-pgcrypto.sql:/docker-entrypoint-initdb.d/10-pgcrypto.sql
      - ./config/11-postgrest-config.sql:/docker-entrypoint-initdb.d/11-postgrest-config.sql

      # Postgrest Permission Management
      - ./ci2027-db-structure/globals.sql:/docker-entrypoint-initdb.d/10-globals.sql

      ### Old Setup (deprecated)
      #- ./ci2027-db-structure/structure.sql:/docker-entrypoint-initdb.d/20-structure.sql
      #- ./ci2027-db-data/data.sql:/docker-entrypoint-initdb.d/40-data.sql
      


      ### New Setup (to be implemented) 
      #- ./ci2027-db-structure/ci2027/structure.sql:/docker-entrypoint-initdb.d/930-structure.sql
      - ./ci2027-db-structure/ci2027/schema.sql:/docker-entrypoint-initdb.d/900-schema.sql
      - ./ci2027-db-structure/ci2027/enum.sql:/docker-entrypoint-initdb.d/901-enum.sql
      - ./ci2027-db-structure/ci2027/enum_overwrite.sql:/docker-entrypoint-initdb.d/902-enum_overwrite.sql
      - ./ci2027-db-structure/ci2027/domains.sql:/docker-entrypoint-initdb.d/902-domains.sql
      
      
      #- ./ci2027-db-structure/ci2027:/docker-entrypoint-initdb.d
      #- ci2027-db-structure/ci2027/lookup_tables:/docker-entrypoint-initdb.d
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_growth_area.sql:/docker-entrypoint-initdb.d/910-lookup_growth_area.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_growth_district.sql:/docker-entrypoint-initdb.d/910-lookup_growth_district.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_state.sql:/docker-entrypoint-initdb.d/910-lookup_state.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_sampling_strata.sql:/docker-entrypoint-initdb.d/910-lookup_sampling_strata.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_layer_type.sql:/docker-entrypoint-initdb.d/910-lookup_layer_type.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_forest_decision.sql:/docker-entrypoint-initdb.d/910-lookup_forest_decision.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_property_type.sql:/docker-entrypoint-initdb.d/910-lookup_property_type.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_property_size_class.sql:/docker-entrypoint-initdb.d/910-lookup_property_size_class.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_height_layer_class.sql:/docker-entrypoint-initdb.d/910-lookup_height_layer_class.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_forestry_department.sql:/docker-entrypoint-initdb.d/910-lookup_forestry_department.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_forest_type.sql:/docker-entrypoint-initdb.d/910-lookup_forest_type.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_habitat_type.sql:/docker-entrypoint-initdb.d/910-lookup_habitat_type.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_habitat_type_source.sql:/docker-entrypoint-initdb.d/910-lookup_habitat_type_source.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_land_use.sql:/docker-entrypoint-initdb.d/910-lookup_land_use.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_use_restriction.sql:/docker-entrypoint-initdb.d/910-lookup_use_restriction.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_marking_state.sql:/docker-entrypoint-initdb.d/910-lookup_marking_state.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_marking_profile.sql:/docker-entrypoint-initdb.d/910-lookup_marking_profile.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_terrain_form.sql:/docker-entrypoint-initdb.d/910-lookup_terrain_form.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_management_type.sql:/docker-entrypoint-initdb.d/910-lookup_management_type.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_harvesting_method.sql:/docker-entrypoint-initdb.d/910-lookup_harvesting_method.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_stand_phase.sql:/docker-entrypoint-initdb.d/910-lookup_stand_phase.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_stand_layer.sql:/docker-entrypoint-initdb.d/910-lookup_stand_layer.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_trees_less_4meter_count_factor.sql:/docker-entrypoint-initdb.d/910-lookup_trees_less_4meter_count_factor.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_trees_less_4meter_layer.sql:/docker-entrypoint-initdb.d/910-lookup_trees_less_4meter_layer.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_trees_less_4meter_mirrored.sql:/docker-entrypoint-initdb.d/910-lookup_trees_less_4meter_mirrored.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_trees_less_4meter_origin.sql:/docker-entrypoint-initdb.d/910-lookup_trees_less_4meter_origin.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_tree_state.sql:/docker-entrypoint-initdb.d/910-lookup_tree_state.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_tree_species.sql:/docker-entrypoint-initdb.d/910-lookup_tree_species.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_stem_breakage.sql:/docker-entrypoint-initdb.d/910-lookup_stem_breakage.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_stem_form.sql:/docker-entrypoint-initdb.d/910-lookup_stem_form.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_pruning.sql:/docker-entrypoint-initdb.d/910-lookup_pruning.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_tree_species_group.sql:/docker-entrypoint-initdb.d/910-lookup_tree_species_group.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_dead_wood_type.sql:/docker-entrypoint-initdb.d/910-lookup_dead_wood_type.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_decomposition.sql:/docker-entrypoint-initdb.d/910-lookup_decomposition.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_terrain.sql:/docker-entrypoint-initdb.d/910-lookup_terrain.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_edge_state.sql:/docker-entrypoint-initdb.d/910-lookup_edge_state.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_edge_type.sql:/docker-entrypoint-initdb.d/910-lookup_edge_type.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_gnss_quality.sql:/docker-entrypoint-initdb.d/910-lookup_gnss_quality.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_bitten.sql:/docker-entrypoint-initdb.d/910-lookup_bitten.sql
      - ./ci2027-db-structure/ci2027/lookup_tables/lookup_tree_size_class.sql:/docker-entrypoint-initdb.d/910-lookup_tree_size_class.sql

      - ./ci2027-db-structure/ci2027/tables/cluster.sql:/docker-entrypoint-initdb.d/920-cluster.sql
      - ./ci2027-db-structure/ci2027/tables/plot.sql:/docker-entrypoint-initdb.d/921-plot.sql
      - ./ci2027-db-structure/ci2027/tables/wzp_tree.sql:/docker-entrypoint-initdb.d/922-wzp_tree.sql
      - ./ci2027-db-structure/ci2027/tables/plot_location.sql:/docker-entrypoint-initdb.d/922-plot_location.sql
      - ./ci2027-db-structure/ci2027/tables/position.sql:/docker-entrypoint-initdb.d/922-position.sql
      - ./ci2027-db-structure/ci2027/tables/edge.sql:/docker-entrypoint-initdb.d/922-edge.sql
      - ./ci2027-db-structure/ci2027/tables/sapling_1m.sql:/docker-entrypoint-initdb.d/922-sapling_1m.sql
      - ./ci2027-db-structure/ci2027/tables/sapling_2m.sql:/docker-entrypoint-initdb.d/922-sapling_2m.sql
      - ./ci2027-db-structure/ci2027/tables/deadwood.sql:/docker-entrypoint-initdb.d/922-deadwood.sql
      

       # TMP
      #- ./ci2027-db-structure/NFI2022/code_bwineu.sql:/docker-entrypoint-initdb.d/999-coder_bwineu.sql



      ### Test Setup to be used by automated tests
      - ./default/grants.sql:/docker-entrypoint-initdb.d/99-grants.sql
      - ./default/user.sql:/docker-entrypoint-initdb.d/99-default-user.sql
      #- ./default/views.sql:/docker-entrypoint-initdb.d/99-default-views.sql
      - ./default/export-clusters.sql:/docker-entrypoint-initdb.d/99-export-clusters.sql

      # IMPORT
      - ./default/set/plot_location.sql:/docker-entrypoint-initdb.d/99-plot_location.sql
      - ./default/set/wzp_tree.sql:/docker-entrypoint-initdb.d/99-wzp_tree.sql
      - ./default/set/deadwood.sql:/docker-entrypoint-initdb.d/99-deadwood.sql
      - ./default/import-clusters.sql:/docker-entrypoint-initdb.d/99-import-clusters.sql
      
      - ./default/data.sql:/docker-entrypoint-initdb.d/99-default-data.sql
      
      #- ./pgdata:/var/lib/postgresql/data

      

  # https://hub.docker.com/r/prodrigestivill/postgres-backup-local
  pgbackups:
    image: prodrigestivill/postgres-backup-local
    restart: always
    user: postgres:postgres 
    volumes:
        - /var/opt/pgbackups:/backups
    links:
        - postgres # :${PGADMIN_HOST_NAME}
    depends_on:
        - postgres
    environment:
        - POSTGRES_HOST=${PGADMIN_HOST_NAME}
        - POSTGRES_DB=postgres
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        # - POSTGRES_PASSWORD_FILE=/run/secrets/db_password <-- alternative for POSTGRES_PASSWORD (to use with docker secrets)
        # - POSTGRES_EXTRA_OPTS=-Z1 --schema=public --blobs
        - SCHEDULE=@daily
        - BACKUP_KEEP_MONTHS=6
        - HEALTHCHECK_PORT=8080

  pgadmin:
    restart: always
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    environment:
        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        PGADMIN_LISTEN_PORT: 5050
        SCRIPT_NAME: "/pgadmin"
    ports:
        - "5050:5050"
    links:
        - postgres:${PGADMIN_HOST_NAME}
    depends_on:
      - postgrest
    user: root
    volumes:
      - ./pgadmindata:/var/lib/pgadmin

  swagger:
    restart: always
    image: swaggerapi/swagger-ui
    ports:
        - "4080:8080"
    expose:
        - "4080"
    environment:
        API_URL: ${PGRST_OPENAPI_SERVER_PROXY_URI}
    depends_on:
      - postgrest
